"""initial_migration

Revision ID: 0ed41df5fcd3
Revises: 
Create Date: 2025-06-13 11:54:36.907517+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0ed41df5fcd3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_password_reset_tokens'))
    )
    op.create_index('idx_reset_token_expires', 'auth_password_reset_tokens', ['expires_at'], unique=False)
    op.create_index('idx_reset_token_user', 'auth_password_reset_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_auth_password_reset_tokens_id'), 'auth_password_reset_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_auth_password_reset_tokens_token'), 'auth_password_reset_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_auth_password_reset_tokens_user_id'), 'auth_password_reset_tokens', ['user_id'], unique=False)
    op.create_table('auth_user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_info', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_user_sessions'))
    )
    op.create_index('idx_session_expires', 'auth_user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_session_token', 'auth_user_sessions', ['session_token'], unique=False)
    op.create_index('idx_session_user_active', 'auth_user_sessions', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_auth_user_sessions_id'), 'auth_user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_auth_user_sessions_refresh_token'), 'auth_user_sessions', ['refresh_token'], unique=True)
    op.create_index(op.f('ix_auth_user_sessions_session_token'), 'auth_user_sessions', ['session_token'], unique=True)
    op.create_index(op.f('ix_auth_user_sessions_user_id'), 'auth_user_sessions', ['user_id'], unique=False)
    op.create_table('auth_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('PARENT', 'PROFESSIONAL', 'ADMIN', 'SUPER_ADMIN', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING', 'DELETED', name='userstatus'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('specialization', sa.String(length=200), nullable=True),
    sa.Column('clinic_name', sa.String(length=200), nullable=True),
    sa.Column('clinic_address', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('last_modified_by', sa.Integer(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_users'))
    )
    op.create_index('idx_user_created_at', 'auth_users', ['created_at'], unique=False)
    op.create_index('idx_user_email_status', 'auth_users', ['email', 'status'], unique=False)
    op.create_index('idx_user_last_login', 'auth_users', ['last_login_at'], unique=False)
    op.create_index('idx_user_role_active', 'auth_users', ['role', 'is_active'], unique=False)
    op.create_index(op.f('ix_auth_users_email'), 'auth_users', ['email'], unique=True)
    op.create_index(op.f('ix_auth_users_id'), 'auth_users', ['id'], unique=False)
    op.create_index(op.f('ix_auth_users_is_active'), 'auth_users', ['is_active'], unique=False)
    op.create_index(op.f('ix_auth_users_license_number'), 'auth_users', ['license_number'], unique=False)
    op.create_index(op.f('ix_auth_users_role'), 'auth_users', ['role'], unique=False)
    op.create_index(op.f('ix_auth_users_status'), 'auth_users', ['status'], unique=False)
    op.create_table('children',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('achievements', sa.JSON(), nullable=False),
    sa.Column('diagnosis', sa.String(length=200), nullable=True),
    sa.Column('support_level', sa.Integer(), nullable=True),
    sa.Column('diagnosis_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('diagnosing_professional', sa.String(length=200), nullable=True),
    sa.Column('sensory_profile', sa.JSON(), nullable=True),
    sa.Column('behavioral_notes', sa.Text(), nullable=True),
    sa.Column('communication_style', sa.String(length=100), nullable=True),
    sa.Column('communication_notes', sa.Text(), nullable=True),
    sa.Column('current_therapies', sa.JSON(), nullable=False),
    sa.Column('emergency_contacts', sa.JSON(), nullable=False),
    sa.Column('safety_protocols', sa.JSON(), nullable=False),
    sa.Column('baseline_assessment', sa.JSON(), nullable=True),
    sa.Column('last_assessment_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('progress_notes', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['auth_users.id'], name=op.f('fk_children_parent_id_auth_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_children'))
    )
    op.create_index(op.f('ix_children_id'), 'children', ['id'], unique=False)
    op.create_index(op.f('ix_children_is_active'), 'children', ['is_active'], unique=False)
    op.create_index(op.f('ix_children_name'), 'children', ['name'], unique=False)
    op.create_index(op.f('ix_children_parent_id'), 'children', ['parent_id'], unique=False)
    op.create_table('professional_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('license_type', sa.String(length=100), nullable=True),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('license_state', sa.String(length=50), nullable=True),
    sa.Column('license_expiry', sa.DateTime(timezone=True), nullable=True),
    sa.Column('primary_specialty', sa.String(length=200), nullable=True),
    sa.Column('subspecialties', sa.JSON(), nullable=False),
    sa.Column('certifications', sa.JSON(), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('clinic_name', sa.String(length=200), nullable=True),
    sa.Column('clinic_address', sa.Text(), nullable=True),
    sa.Column('clinic_phone', sa.String(length=20), nullable=True),
    sa.Column('practice_type', sa.String(length=100), nullable=True),
    sa.Column('asd_experience_years', sa.Integer(), nullable=True),
    sa.Column('asd_certifications', sa.JSON(), nullable=False),
    sa.Column('preferred_age_groups', sa.JSON(), nullable=False),
    sa.Column('treatment_approaches', sa.JSON(), nullable=False),
    sa.Column('patient_count', sa.Integer(), nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_sessions', sa.Integer(), nullable=False),
    sa.Column('available_days', sa.JSON(), nullable=False),
    sa.Column('available_hours', sa.JSON(), nullable=True),
    sa.Column('accepts_new_patients', sa.Boolean(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('treatment_philosophy', sa.Text(), nullable=True),
    sa.Column('languages_spoken', sa.JSON(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], name=op.f('fk_professional_profiles_user_id_auth_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_professional_profiles')),
    sa.UniqueConstraint('user_id', name=op.f('uq_professional_profiles_user_id'))
    )
    op.create_index(op.f('ix_professional_profiles_id'), 'professional_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_professional_profiles_license_number'), 'professional_profiles', ['license_number'], unique=False)
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('activity_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('emotional_state_before', sa.String(length=50), nullable=True),
    sa.Column('emotional_state_after', sa.String(length=50), nullable=True),
    sa.Column('anxiety_level_before', sa.Integer(), nullable=True),
    sa.Column('anxiety_level_after', sa.Integer(), nullable=True),
    sa.Column('support_level_needed', sa.String(length=50), nullable=True),
    sa.Column('support_provided_by', sa.String(length=100), nullable=True),
    sa.Column('assistive_technology_used', sa.JSON(), nullable=False),
    sa.Column('environment_type', sa.String(length=50), nullable=True),
    sa.Column('environmental_modifications', sa.JSON(), nullable=False),
    sa.Column('sensory_accommodations', sa.JSON(), nullable=False),
    sa.Column('completion_status', sa.String(length=50), nullable=False),
    sa.Column('success_rating', sa.Integer(), nullable=True),
    sa.Column('challenges_encountered', sa.JSON(), nullable=False),
    sa.Column('strategies_used', sa.JSON(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('verified_by_parent', sa.Boolean(), nullable=False),
    sa.Column('verified_by_professional', sa.Boolean(), nullable=False),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['children.id'], name=op.f('fk_activities_child_id_children')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activities'))
    )
    op.create_index(op.f('ix_activities_activity_type'), 'activities', ['activity_type'], unique=False)
    op.create_index(op.f('ix_activities_category'), 'activities', ['category'], unique=False)
    op.create_index(op.f('ix_activities_child_id'), 'activities', ['child_id'], unique=False)
    op.create_index(op.f('ix_activities_id'), 'activities', ['id'], unique=False)
    op.create_table('assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('assessment_type', sa.String(length=100), nullable=False),
    sa.Column('assessment_name', sa.String(length=200), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('administered_by', sa.String(length=200), nullable=False),
    sa.Column('administered_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('raw_scores', sa.JSON(), nullable=True),
    sa.Column('standard_scores', sa.JSON(), nullable=True),
    sa.Column('percentiles', sa.JSON(), nullable=True),
    sa.Column('age_equivalents', sa.JSON(), nullable=True),
    sa.Column('interpretation', sa.Text(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=False),
    sa.Column('goals_identified', sa.JSON(), nullable=False),
    sa.Column('previous_assessment_id', sa.Integer(), nullable=True),
    sa.Column('progress_summary', sa.Text(), nullable=True),
    sa.Column('areas_of_growth', sa.JSON(), nullable=False),
    sa.Column('areas_of_concern', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['children.id'], name=op.f('fk_assessments_child_id_children')),
    sa.ForeignKeyConstraint(['previous_assessment_id'], ['assessments.id'], name=op.f('fk_assessments_previous_assessment_id_assessments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assessments'))
    )
    op.create_index(op.f('ix_assessments_assessment_type'), 'assessments', ['assessment_type'], unique=False)
    op.create_index(op.f('ix_assessments_child_id'), 'assessments', ['child_id'], unique=False)
    op.create_index(op.f('ix_assessments_id'), 'assessments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_assessments_id'), table_name='assessments')
    op.drop_index(op.f('ix_assessments_child_id'), table_name='assessments')
    op.drop_index(op.f('ix_assessments_assessment_type'), table_name='assessments')
    op.drop_table('assessments')
    op.drop_index(op.f('ix_activities_id'), table_name='activities')
    op.drop_index(op.f('ix_activities_child_id'), table_name='activities')
    op.drop_index(op.f('ix_activities_category'), table_name='activities')
    op.drop_index(op.f('ix_activities_activity_type'), table_name='activities')
    op.drop_table('activities')
    op.drop_index(op.f('ix_professional_profiles_license_number'), table_name='professional_profiles')
    op.drop_index(op.f('ix_professional_profiles_id'), table_name='professional_profiles')
    op.drop_table('professional_profiles')
    op.drop_index(op.f('ix_children_parent_id'), table_name='children')
    op.drop_index(op.f('ix_children_name'), table_name='children')
    op.drop_index(op.f('ix_children_is_active'), table_name='children')
    op.drop_index(op.f('ix_children_id'), table_name='children')
    op.drop_table('children')
    op.drop_index(op.f('ix_auth_users_status'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_role'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_license_number'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_is_active'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_id'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_email'), table_name='auth_users')
    op.drop_index('idx_user_role_active', table_name='auth_users')
    op.drop_index('idx_user_last_login', table_name='auth_users')
    op.drop_index('idx_user_email_status', table_name='auth_users')
    op.drop_index('idx_user_created_at', table_name='auth_users')
    op.drop_table('auth_users')
    op.drop_index(op.f('ix_auth_user_sessions_user_id'), table_name='auth_user_sessions')
    op.drop_index(op.f('ix_auth_user_sessions_session_token'), table_name='auth_user_sessions')
    op.drop_index(op.f('ix_auth_user_sessions_refresh_token'), table_name='auth_user_sessions')
    op.drop_index(op.f('ix_auth_user_sessions_id'), table_name='auth_user_sessions')
    op.drop_index('idx_session_user_active', table_name='auth_user_sessions')
    op.drop_index('idx_session_token', table_name='auth_user_sessions')
    op.drop_index('idx_session_expires', table_name='auth_user_sessions')
    op.drop_table('auth_user_sessions')
    op.drop_index(op.f('ix_auth_password_reset_tokens_user_id'), table_name='auth_password_reset_tokens')
    op.drop_index(op.f('ix_auth_password_reset_tokens_token'), table_name='auth_password_reset_tokens')
    op.drop_index(op.f('ix_auth_password_reset_tokens_id'), table_name='auth_password_reset_tokens')
    op.drop_index('idx_reset_token_user', table_name='auth_password_reset_tokens')
    op.drop_index('idx_reset_token_expires', table_name='auth_password_reset_tokens')
    op.drop_table('auth_password_reset_tokens')
    # ### end Alembic commands ###
